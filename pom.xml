<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.yhli</groupId>
	<version>1.0</version>
	<artifactId>springboot-demo-parent</artifactId>
	<packaging>pom</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.9.RELEASE</version>
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<modules>
		<module>oauth2</module>
	</modules>

	<dependencyManagement>
		<dependencies>

			<!-- Database: PostgreSQL -->
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>42.1.4</version>
				<scope>runtime</scope>
			</dependency>

			<!-- Database: MySQL -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.45</version>
				<scope>runtime</scope>
			</dependency>

			<!-- Tools -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.4</version>
			</dependency>

			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt</artifactId>
				<version>0.9.0</version>
			</dependency>

			<!--Spring Data Redis dependencies -->
			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>2.9.0</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-pool2</artifactId>
				<!-- <version>2.0</version> -->
				<version>2.5.0</version>
			</dependency>

			<!-- CXF webservice -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-spring-boot-starter-jaxws</artifactId>
				<version>3.2.4</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- We use the Resources plugin to filer Dockerfile and run.sh, it inserts 
					actual JAR filename -->
				<!-- The final Dockerfile will be created in target/dockerfile/Dockerfile -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<executions>
						<execution>
							<id>copy-resources</id>
							<!-- here the phase you need -->
							<phase>validate</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${basedir}/target/dockerfile</outputDirectory>
								<resources>
									<resource>
										<directory>src/main/docker</directory>
										<filtering>true</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<!-- <version>0.4.10</version> -->
					<version>1.0.0</version>
					<configuration>
						<skipDocker>${docker.skip}</skipDocker>
						<imageName>${docker.image.user}/${docker.image.name}:${docker.image.tag}</imageName>
						<dockerDirectory>${basedir}/target/dockerfile</dockerDirectory>
						<resources>
							<resource>
								<targetPath>/</targetPath>
								<directory>${project.build.directory}</directory>
								<include>${project.build.finalName}.jar</include>
							</resource>
						</resources>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>

</project>
